/* TreeNode Component Styles */

.tree-node {
  position: relative;
}

/* Depth indicators with connecting lines */
.tree-node::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 1px;
  background: linear-gradient(to bottom, transparent 0%, #e5e7eb 20%, #e5e7eb 80%, transparent 100%);
  opacity: 0.6;
}

.tree-node:first-child::before {
  background: linear-gradient(to bottom, transparent 0%, transparent 50%, #e5e7eb 50%, #e5e7eb 80%, transparent 100%);
}

.tree-node:last-child::before {
  background: linear-gradient(to bottom, transparent 0%, #e5e7eb 20%, #e5e7eb 50%, transparent 50%);
}

.tree-node:only-child::before {
  display: none;
}

/* Horizontal connecting lines */
.tree-node::after {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  width: 12px;
  height: 1px;
  background-color: #e5e7eb;
  opacity: 0.6;
}

/* Root level nodes don't need connecting lines */
.tree-node[data-depth="0"]::before,
.tree-node[data-depth="0"]::after {
  display: none;
}

/* Smooth expand/collapse animations */
.tree-children {
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.tree-children.expanding {
  animation: expandChildren 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.tree-children.collapsing {
  animation: collapseChildren 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes expandChildren {
  from {
    opacity: 0;
    max-height: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    max-height: 1000px;
    transform: translateY(0);
  }
}

@keyframes collapseChildren {
  from {
    opacity: 1;
    max-height: 1000px;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    max-height: 0;
    transform: translateY(-10px);
  }
}

/* Node type specific styling */
.tree-node-prefix {
  font-weight: 500;
}

.tree-node-word {
  font-weight: 400;
}

.tree-node-typo-correction {
  font-style: italic;
}

/* Frequency-based visual prominence */
.frequency-very-high {
  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
  border-left: 3px solid #0ea5e9;
}

.frequency-high {
  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
  border-left: 2px solid #64748b;
}

.frequency-medium {
  background: linear-gradient(135deg, #fefefe 0%, #f9fafb 100%);
}

/* Hover effects */
.tree-node:hover .tree-node-content {
  transform: translateX(2px);
  transition: transform 0.15s ease-out;
}

/* Selection indicators */
.tree-node-selected {
  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
  border-left: 4px solid #3b82f6;
  box-shadow: 0 2px 4px rgba(59, 130, 246, 0.1);
}

.tree-node-selected::before,
.tree-node-selected::after {
  background-color: #3b82f6;
  opacity: 0.3;
}

/* Focus indicators for accessibility */
.tree-node:focus-within {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
  border-radius: 4px;
}

/* Enhanced focus indicators for keyboard navigation */
.tree-node [role="treeitem"]:focus-visible {
  outline: 2px solid #2563eb;
  outline-offset: 2px;
  border-radius: 4px;
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.3);
}

.tree-node [role="treeitem"]:focus:not(:focus-visible) {
  outline: none;
}

/* Enhanced focus ring for better visibility */
.tree-node [role="treeitem"].keyboard-focused {
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.3);
  outline: 2px solid #2563eb;
  outline-offset: 1px;
}

/* Skip link styles for screen readers */
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: #000;
  color: #fff;
  padding: 8px;
  text-decoration: none;
  border-radius: 4px;
  z-index: 1000;
}

.skip-link:focus {
  top: 6px;
}

/* Screen reader only content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Focus trap styles */
.focus-trap-boundary {
  outline: none;
  position: relative;
}

.focus-trap-boundary:focus {
  outline: 2px solid transparent;
}

.focus-trap-boundary::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border: 2px solid transparent;
  border-radius: 6px;
  pointer-events: none;
  transition: border-color 0.2s ease;
}

.focus-trap-boundary:focus-within::before {
  border-color: rgba(37, 99, 235, 0.5);
}

/* Enhanced focus indicators for different modes */
.tree-node [role="treeitem"].browse-mode {
  /* Browse mode - virtual cursor navigation */
  outline: 2px dashed #2563eb;
  outline-offset: 1px;
  background-color: rgba(37, 99, 235, 0.05);
}

.tree-node [role="treeitem"].focus-mode {
  /* Focus mode - keyboard navigation */
  outline: 2px solid #2563eb;
  outline-offset: 2px;
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.3);
}

.tree-node [role="treeitem"].keyboard-focused {
  /* Enhanced keyboard focus indicator */
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.3);
  outline: 2px solid #2563eb;
  outline-offset: 1px;
  background-color: rgba(37, 99, 235, 0.08);
  border-radius: 4px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .tree-node::before,
  .tree-node::after {
    background-color: CanvasText;
    opacity: 1;
  }
  
  .tree-node-selected {
    background: Highlight;
    color: HighlightText;
    border-color: HighlightText;
  }
  
  .tree-node [role="treeitem"] {
    border: 2px solid transparent;
    background-color: Canvas;
    color: CanvasText;
  }
  
  .tree-node [role="treeitem"]:focus,
  .tree-node [role="treeitem"].keyboard-focused {
    border-color: Highlight;
    outline: 3px solid Highlight;
    outline-offset: 2px;
    background-color: Canvas;
    color: CanvasText;
  }
  
  .tree-node [role="treeitem"][aria-selected="true"] {
    background-color: Highlight;
    color: HighlightText;
    border-color: HighlightText;
  }
  
  .tree-node [role="treeitem"].browse-mode {
    outline: 3px dashed Highlight;
    outline-offset: 1px;
    background-color: Canvas;
  }
  
  .tree-node [role="treeitem"].focus-mode {
    outline: 3px solid Highlight;
    outline-offset: 2px;
    box-shadow: 0 0 0 1px HighlightText;
  }
  
  .tree-node button {
    border: 2px solid CanvasText;
    background-color: ButtonFace;
    color: ButtonText;
  }
  
  .tree-node button:focus {
    outline: 3px solid Highlight;
    outline-offset: 1px;
    border-color: Highlight;
  }
  
  .tree-node button:hover {
    background-color: Highlight;
    color: HighlightText;
    border-color: HighlightText;
  }
  
  /* Enhanced visibility for indicators */
  .tree-node .text-yellow-800 {
    color: CanvasText;
    background-color: Mark;
  }
  
  .tree-node .text-green-800 {
    color: CanvasText;
    background-color: Mark;
  }
  
  .tree-node .text-blue-700 {
    color: LinkText;
  }
  
  .tree-node .bg-yellow-100,
  .tree-node .bg-green-100 {
    background-color: Mark;
    color: CanvasText;
    border-color: CanvasText;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .tree-children,
  .tree-node-content,
  .expand-icon svg {
    transition: none;
    animation: none;
  }
}

/* Windows High Contrast Mode support */
@media screen and (-ms-high-contrast: active) {
  .tree-node [role="treeitem"] {
    border: 2px solid transparent;
    background-color: Window;
    color: WindowText;
  }
  
  .tree-node [role="treeitem"]:focus,
  .tree-node [role="treeitem"].keyboard-focused {
    border-color: Highlight;
    outline: 3px solid Highlight;
    outline-offset: 2px;
    background-color: Window;
    color: WindowText;
  }
  
  .tree-node [role="treeitem"][aria-selected="true"] {
    background-color: Highlight;
    color: HighlightText;
    border-color: HighlightText;
  }
  
  .tree-node button {
    border: 2px solid ButtonText;
    background-color: ButtonFace;
    color: ButtonText;
  }
  
  .tree-node button:focus {
    outline: 3px solid Highlight;
    outline-offset: 1px;
    border-color: Highlight;
  }
  
  .focus-trap-boundary::before {
    border-color: Highlight;
  }
}

/* Forced colors mode (modern high contrast) */
@media (forced-colors: active) {
  .tree-node [role="treeitem"] {
    border: 1px solid transparent;
    background-color: Canvas;
    color: CanvasText;
    forced-color-adjust: none;
  }
  
  .tree-node [role="treeitem"]:focus,
  .tree-node [role="treeitem"].keyboard-focused {
    border-color: Highlight;
    outline: 2px solid Highlight;
    outline-offset: 1px;
    background-color: Canvas;
    color: CanvasText;
  }
  
  .tree-node [role="treeitem"][aria-selected="true"] {
    background-color: Highlight;
    color: HighlightText;
    border-color: HighlightText;
  }
  
  .tree-node [role="treeitem"].browse-mode {
    outline: 2px dashed Highlight;
    outline-offset: 1px;
  }
  
  .tree-node [role="treeitem"].focus-mode {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }
  
  .tree-node button {
    border: 1px solid ButtonText;
    background-color: ButtonFace;
    color: ButtonText;
    forced-color-adjust: none;
  }
  
  .tree-node button:focus {
    outline: 2px solid Highlight;
    outline-offset: 1px;
    border-color: Highlight;
  }
  
  .focus-trap-boundary::before {
    border-color: Highlight;
  }
}

/* Print styles */
@media print {
  .tree-node {
    break-inside: avoid;
  }
  
  .tree-children {
    max-height: none !important;
    opacity: 1 !important;
  }
  
  .expand-icon {
    display: none;
  }
  
  .tree-node [role="treeitem"]:focus,
  .tree-node [role="treeitem"].keyboard-focused {
    outline: 2px solid #000;
    background-color: transparent;
  }
}